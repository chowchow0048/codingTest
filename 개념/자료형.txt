정수형: 정수를 다루는 자료형
    양의정수, 음의정수, 0을 포함

실수형: 소수점 아래의 데이터를 포함하는 수 자료형
    변수에 소수점을 붙인 수를 대입하면 실수형 변수로 자동처리
    소수부가 0이거나 정수부가 0인 소수는 0을 생략하고 작성할 수 있음
    5.0 == 5. // -0.7 == -.7

    지수 표현 방식
      파이썬 에서는 e나 E를 이용한 지수 표현 방식을 이용할 수 있다
      1e9 == 10의 9승(10억)
      752.5 == 75.25e1
      3.954 == 395.4e-2 or 3954e-3

 컴퓨터는 2진수 체계를 사용하는데, 이는 실수정보를 표현하는 정확도에 한계를 갖는다
예를들어 0.3+0.6은 10진수 체계에서는 0.9이지만, 2진수에서는 0.9를 정확히 표현할 수 있는
방법이 없다. 미세한 오차가 발생한다
>> round()함수 사용
    123.456을 소수 셋째 자리에서 반올림하려면 round(123.456, 2)
    round(123.456, 2) == 123.46
    이를 응용하여
    a = 0.3 + 0.6
    b = round(a, 4) 
    >> a == 0.8999999 // b == 0.9

수 자료형의 연산
    수 자료형은 사칙연산, 나누기연산이 많이 사용된다
    단, 나누기 연산자는 주의해서 사용해야한다
    나누기 연산자는 나눠진 결과를 실수형으로 반환한다
    /, %, **(거듭제곱)
    a = 7, b = 3
    a/b == 2.33333333333335
    a%b = 1
    a//b = 2

리스트
    리스트는 대괄호[] 안에 원소를 넣어 초기하며, 쉼표로 원소를 구분.
    비어있는 리스트를 선언하고자 할 때는 list() 혹은 간단히 [].
    리스트의 원소에 접근할 때는 인덱스 값을 괄호()안에 넣는다.
    인덱스는 0부터 시작.

    초기화
        1. a = [1, 2, 3, 4, 5]
        2. n = 10
           a = [0] * n
           a == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        3. 리스트 컴프리헨션
            array = [i for i in range(10)]
              >> 0부터 9까지의 수를 포함하는 리스트
            
            array = [i for i in range(20) if i%2 == 1]
              >> 0부터 19까지의 수 중에서 홀수만 포함하는 리스트

            array = [i * i for i in range(1, 10)]
              >> 1부터 9까지의 수들의 제곱값을 포함하는 리스트

            리스트 컴프리헨션은 2차원 리스트를 초기화할 때 효과적
            특히, N x M 크기의 2차원 리스트를 한번에 초기화 해야할 때 유용
              ex: array1 = [[0] * m for _ in range(n)] 
                  array2 = [[0] * m] * n 이거는 잘못된 예시, 이 코드는
                  전체리스트 안에 포함된 각 리스트가 모두 같은 객체로 인식된다

                  array1[1][1] = 5 >> [1][1]만 5로 바뀜.
                  array2[1][1] = 5 >> [0][1], [1][1], [2][1], ...
                                      모든 1행의 값들이 변함

    인덱싱
    a = [1, 2, 3, 4, 5]
    4번째 원소 출력: print(a[3])
    뒤에서 첫번째 원소 출력: print(a[-1])
    뒤에서 세번째 원소 출력: print(a[-3])

    슬라이싱
    a = [1, 2, 3, 4, 5]
    두번째~네번째 원소 출력: print(a[1:4])

    언더바 사용법: 주로 반복을 수행하되 반복을 위한 변수값을 무시하고자 할 때 사용
        1. "Hello World" 5번 출력
        for _ in range(5):
            print("Hello World");

    많이 쓰이는 함수
        1. append: 리스트에 원소 하나 삽입 O(1)
        2. sort: 기본 정렬기능, 오름차순 정렬 O(NlogN)
                (reverse=true)내림차순 정렬 O(NlogN)
        3. reverse: 원소 순서를 뒤집는다 O(N) 
        4. insert: 특정 인덱스에 원소를 삽입 O(N)
        5. count: 리스트에서 특정값 과 같은 값의 원소 수를 센다 O(N)
        6. remove: 특정값의 원소를 제거. 값을가진 원소가 여러개면 하나만 제거 O(N)

    리스트에서 특정 값을 가지는 원소를 모두 제거하기
    a = [1, 2, 3, 4, 5, 5, 5]
    remove_set = {3, 5} # 집합 자료형
    result = [i for i in a if i not in remove_set]
    >> result = [1, 2, 4]
    
문자열 

튜플

사전


